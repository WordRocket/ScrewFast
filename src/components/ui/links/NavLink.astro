---
// Destructure the properties from Astro.props
const { url, name } = Astro.props;

// Define TypeScript interface for the properties
interface Props {
  url: string;
  name: string;
}
---

<!--
Re-usable link component for navigation bar. Highlights the active link
by comparing the current URL with the href of each link.
We assign an ID matching the URL for easy reference in our script.
If URL is '/' (home page), assign ID as 'home' 
-->
<a
  id={url === "/" ? "home" : url.replace("/", "")}
  href={url}
  data-astro-prefetch
  class="relative rounded-xl px-3 py-2 text-sm font-medium text-neutral-600 outline-hidden ring-primary-500 transition-all duration-200 hover:text-primary-600 hover:bg-primary-50 focus-visible:ring-2 dark:text-neutral-400 dark:ring-primary-400 dark:hover:text-primary-400 dark:hover:bg-primary-950/50 dark:focus:outline-hidden md:text-sm 2xl:text-base"
>
  {name}
</a>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    let url = window.location.pathname;
    let navId;

    if (url === "/") {
      navId = "home";
    } else {
      navId = url.replace("/", "");
    }

    let nav = document.getElementById(navId);

    if (nav) {
      nav.classList.remove(
        "text-neutral-600",
        "dark:text-neutral-400",
        "hover:text-primary-600",
        "dark:hover:text-primary-400"
      );
      nav.classList.add("text-primary-600", "dark:text-primary-400", "bg-primary-50", "dark:bg-primary-950/50");
      nav.setAttribute("aria-current", "page");
    }
  });
</script>
