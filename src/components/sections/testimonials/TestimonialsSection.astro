---
import TestimonialItem from "./TestimonialItem.astro";
import StatsGrid from "../../ui/blocks/StatsGrid.astro";

const {
  title,
  subTitle,
  testimonials,
  statistics
} = Astro.props;

interface Props {
  title: string;
  subTitle?: string;
  testimonials?: Testimonial[];
  statistics?: StatProps[];
}

// TypeScript type for testimonials
type Testimonial = {
  content: string;
  author: string;
  role: string;
  avatarSrc: string;
};

// TypeScript type for stats.
type StatProps = {
  count: string;
  description: string;
};
---

<section
  class="section-alt mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 2xl:max-w-full"
>
  <!-- Container for the testimonials -->
  <div
    class="lg:grid lg:grid-cols-12 lg:items-center lg:justify-between lg:gap-20"
  >
    <div class="lg:col-span-5 lg:col-start-1 animate-on-scroll">
      <!-- Title and Subtitle -->
      <div class="mb-12">
        <h2
          class="mb-4 text-4xl font-bold text-neutral-900 dark:text-white lg:text-5xl"
        >
          {title}
        </h2>
        {subTitle &&
        <p class="text-lg text-neutral-600 dark:text-neutral-300">
          {subTitle}
        </p>
      }
      </div>

      <!-- Generate a blockquote for each testimonial in the testimonials array by mapping over the array. -->
      { testimonials &&
        testimonials.map((testimonial) => (
        <div class="relative p-8 rounded-2xl bg-white shadow-soft border border-neutral-100 dark:bg-neutral-800 dark:border-neutral-700">
          <TestimonialItem content={testimonial.content} author={testimonial.author} role={testimonial.role} avatarSrc={testimonial.avatarSrc} />
        </div>
        ))
      }
    </div>
{ statistics &&
    <div class="mt-16 lg:col-span-6 lg:col-end-13 lg:mt-0 animate-on-scroll">
      <div class="space-y-8 sm:space-y-10">
        <ul
          class="grid grid-cols-2 gap-1 overflow-hidden rounded-2xl"
        >
          <!-- Generate a list item for each stat in the statistics array by mapping over the array. -->
          {
            statistics.map((stat, index) => (
            <li class="bg-white p-8 text-center shadow-soft dark:bg-neutral-800 transition-all duration-300 hover:bg-primary-50 dark:hover:bg-primary-950/50">
              <StatsGrid count={stat.count} description={stat.description} index={index}/>
            </li>
            ))
          }
        </ul>
      </div>
    </div>
  }
  </div>
</section>
